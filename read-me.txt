Composer (required):
  - https://getcomposer.org/download/

  | php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
  | php -r "if (hash_file('sha384', 'composer-setup.php') === '93b54496392c062774670ac18b134c3b3a95e5a5e5c8f1a9f115f203b75bf9a129d5daa8ba6a13e2cc8a1da0806388a8') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
  | php composer-setup.php
  | php -r "unlink('composer-setup.php');"

Create symfony 4 project:

  | composer create-project symfony/skeleton my-project
  | cd my-project

GIT init:

  | sudo rm src/Controller/.gitignore
  | git init
  | gaa && gc -m 'init'

Start server:
  > http://127.0.0.1:8000

  Solution n°1:

    | php -S 127.0.0.1:8000 -t public

  Solution n°2:

    | composer require server --dev

    | bin/console server:run
    | bin/console server:start
    | bin/console server:status
    | bin/console server:stop

Create default controller:

  | composer require profiler (Debug with profiler)

  | composer require annotations         >> @Route
  | composer require maker-bundle        >> bin/console make controller|entity|form|migration...
  | bin/console make:controller Default

    --------------------------------------------------------------------
    ./my-project/src/Controller/DefaultController.php

    <?php

    namespace App\Controller;

    use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
    use Symfony\Component\HttpFoundation\Response;
    use Symfony\Component\Routing\Annotation\Route;

    class DefaultController extends AbstractController
    {
        /**
         * @Route("/", name="index")
         */
        public function index()
        {
            return new Response('Hello world !!!');
        }
    }

    --------------------------------------------------------------------

Twig template:

  | composer require twig

    --------------------------------------------------------------------
    ./my-project/templates/default/index.html.twig

    {% extends 'base.html.twig' %}

    {% block body %}
        Hello world !!!
    {% endblock %}

    --------------------------------------------------------------------
    ./my-project/src/Controller/DefaultController.php

    <?php

    namespace App\Controller;

    use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
    use Symfony\Component\HttpFoundation\Response;
    use Symfony\Component\Routing\Annotation\Route;
    use Twig\Environment;

    class DefaultController extends AbstractController
    {
        /**
         * @Route("/", name="index")
         *
         * @param Environment $twig
         * @return Response
         * @throws \Twig_Error_Loader
         * @throws \Twig_Error_Runtime
         * @throws \Twig_Error_Syntax
         */
        public function index(
            Environment $twig
        )
        {
            return new Response($twig->render('default/index.html.twig'));
        }
    }

    --------------------------------------------------------------------

GIT step 1:

  | gaa && gc -m 'step 1: my first twig controller'

ORM: (@todo)

  | composer require form validator orm
  | bin/console make:form Post

Frontend (encore: CSS & JS):
  https://symfony.com/doc/current/frontend/encore/simple-example.html

  Node (required):
    | sudo apt-get install nodejs npm

  Yarn (required):
    https://yarnpkg.com/lang/en/docs/install/#debian-stable

    | curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
    | echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
    | sudo apt-get install yarn

  | composer require encore
  | yarn install

  | yarn encore dev
  | yarn encore dev --watch
  | yarn encore production

  --------------------------------------------------------------------
  ./my-project/templates/base.html.twig

    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="UTF-8">
            <title>{% block title %}Welcome!{% endblock %}</title>
            {% block stylesheets %}
                {{ encore_entry_link_tags('app') }}
            {% endblock %}
        </head>
        <body>
            {% block body %}{% endblock %}
            {% block javascripts %}
                {{ encore_entry_script_tags('app') }}
            {% endblock %}
        </body>
    </html>

  --------------------------------------------------------------------

GIT step 2:

  | gaa && gc -m 'step 2: encore installed'

Using Bootstrap CSS
  https://symfony.com/doc/current/frontend/encore/bootstrap.html

  | yarn add bootstrap --dev
  | yarn add sass-loader@^7.0.1 node-sass --dev

  --------------------------------------------------------------------
  ./my-project/webpack.config.js (uncomment)

  // enables Sass/SCSS support
  .enableSassLoader()

  --------------------------------------------------------------------
  ./my-project/assets/css/app.scss (rename: app.css)

  // customize some Bootstrap variables
  $primary: darken(#428bca, 20%);

  // the ~ allows you to reference things in node_modules
  @import "~bootstrap/scss/bootstrap";

  --------------------------------------------------------------------
  ./my-project/assets/js/app.js (update: require('../css/app.css');)

  require('../css/app.scss');

  --------------------------------------------------------------------

Using Bootstrap JS
  https://symfony.com/doc/current/frontend/encore/bootstrap.html

  | yarn add jquery popper.js --dev

  --------------------------------------------------------------------
  ./my-project/assets/js/app.js

  /*
   * Welcome to your app's main JavaScript file!
   *
   * We recommend including the built version of this JavaScript file
   * (and its CSS file) in your base layout (base.html.twig).
   */

  // any CSS you require will output into a single css file (app.css in this case)
  require('../css/app.scss');

  const $ = require('jquery');
  // this "modifies" the jquery module: adding behavior to it
  // the bootstrap module doesn't export/return anything
  require('bootstrap');

  // or you can include specific pieces
  // require('bootstrap/js/dist/tooltip');
  // require('bootstrap/js/dist/popover');

  $(document).ready(function() {
      $('[data-toggle="popover"]').popover();
  });

  --------------------------------------------------------------------
  ./my-project/templates/default/index.html.twig

  {% extends 'base.html.twig' %}

  {% block body %}
      <h1 class="alert-success">Hello world !!!</h1>

      <button
              type="button"
              class="btn btn-lg btn-danger"
              data-toggle="popover"
              title="Popover title"
              data-content="And here's some amazing content. It's very engaging. Right?">
          Click to toggle popover
      </button>
  {% endblock %}

  --------------------------------------------------------------------

GIT step 3:

  | gaa && gc -m 'step 3: bootstrap installed'